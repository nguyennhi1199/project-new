choose>
	</xsl:template>

	<xsl:template name="BibDisplayAuthorReport">
		<xsl:param name ="DisplayEditorIfAuthorUnavailale"/>
		<xsl:variable name ="cAuthors">
			<xsl:value-of select ="count(b:Author/b:Author/b:NameList/b:Person)"/>
		</xsl:variable>
		<xsl:variable name="cCorporateAuthors">
			<xsl:value-of select="count(b:Author/b:Author/b:Corporate)" />
		</xsl:variable>
		<xsl:variable name="prop_APA_FromToDash">
			<xsl:call-template name="templ_prop_FromToDash"/>
		</xsl:variable>

		<xsl:variable name="cTitle">
			<xsl:value-of select ="count(b:Title)"/>
		</xsl:variable>
		<xsl:variable name="cEditor">
			<xsl:value-of select="count(b:Author/b:Editor/b:NameList/b:Person)" />
		</xsl:variable>
		<xsl:variable name="cCity">
			<xsl:value-of select ="count(b:City)"/>
		</xsl:variable>
		<xsl:variable name="cPublisher">
			<xsl:value-of select ="count(b:Publisher)"/>
		</xsl:variable>
		<xsl:variable name="cYear">
			<xsl:value-of select ="count(b:Year)"/>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test ="$cAuthors=0">
				<xsl:choose>
					<xsl:when test="$cCorporateAuthors!=0">
						<xsl:value-of select="b:Author/b:Author/b:Corporate"/>
						<xsl:choose>
							<xsl:when test="$cTitle!=0 or $cCity!=0 or $cPublisher!=0 or $cYear!=0">
								<xsl:call-template name ="templ_prop_ListSeparator"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:call-template name ="templ_prop_Dot"/>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:when>
				</xsl:choose>
			</xsl:when>

			<xsl:when test="$cAuthors=1">
				<xsl:for-each select="b:Author/b:Author/b:NameList/b:Person">
					<xsl:variable name ="cAuthorFirstName">
						<xsl:value-of select ="count(b:First)"/>
					</xsl:variable>
					<xsl:variable name ="cAuthorLastName">
						<xsl:value-of select ="count(b:Last)"/>
					</xsl:variable>
					<xsl:variable name ="cAuthorMiddleName">
						<xsl:value-of select ="count(b:Middle)"/>
					</xsl:variable>
					<xsl:choose>
						<xsl:when test="$cAuthorFirstName=1">
							<xsl:choose>
								<xsl:when test="contains(b:First,$prop_APA_FromToDash)">
									<xsl:call-template name="HandleSPaceHypenInAuthor">
										<xsl:with-param name="author">
											<xsl:call-template name="right-trim">
												<xsl:with-param name ="s" select="b:First"/>
											</xsl:call-template>
										</xsl:with-param>
									</xsl:call-template>
									<xsl:call-template name ="templ_prop_Space"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="splitAuthorSpace">
										<xsl:with-param name ="first">
											<xsl:call-template name="right-trim">
												<xsl:with-param name ="s" select="b:First"/>
											</xsl:call-template>
										</xsl:with-param>
									</xsl:call-template>
									<xsl:call-template name ="templ_prop_Space"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>

					<xsl:choose>
						<xsl:when test="$cAuthorMiddleName=1">
							<xsl:choose>
								<xsl:when test="contains(b:Middle,$prop_APA_FromToDash)">
									<xsl:call-template name="HandleSPaceHypenInAuthor">
										<xsl:with-param name="author">
											<xsl:call-template name="right-trim">
												<xsl:with-param name ="s" select="b:Middle"/>
											</xsl:call-template>
										</xsl:with-param>
									</xsl:call-template>
									<xsl:call-template name ="templ_prop_Space"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="splitAuthorSpace">
										<xsl:with-param name ="first">
											<xsl:call-template name="right-trim">
												<xsl:with-param name ="s" select="b:Middle"/>
											</xsl:call-template>
										</xsl:with-param>
									</xsl:call-template>
									<xsl:call-template name ="templ_prop_Space"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
					<xsl:choose>
						<xsl:when test="$cAuthorLastName=1">
							<xsl:value-of select="b:Last"/>
							<xsl:choose>
								<xsl:when test="$cTitle!=0 or $cCity!=0 